/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pr3_3;
import java.io.*;
import javax.swing.*;
/**
 *
 * @author Eli Gavett
 */
public class PR3_3 extends javax.swing.JFrame {
    private static EventManager manager = new EventManager();
    
    /**
     * Creates new form PR3_3
     */
    public PR3_3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLblTitle = new javax.swing.JLabel();
        jTFName = new javax.swing.JTextField();
        jTFLocation = new javax.swing.JTextField();
        jTFDay = new javax.swing.JTextField();
        jTFMonth = new javax.swing.JTextField();
        jTFYear = new javax.swing.JTextField();
        jLblName = new javax.swing.JLabel();
        jLblLocation = new javax.swing.JLabel();
        jLblDate = new javax.swing.JLabel();
        jBtnInput = new javax.swing.JButton();
        jBtnSave = new javax.swing.JButton();
        jLblEvents = new javax.swing.JLabel();
        jLblSort = new javax.swing.JLabel();
        JCBoxSort = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLstEvents = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLblTitle.setText("Event Manager");

        jTFDay.setText("0");
        jTFDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFDayActionPerformed(evt);
            }
        });

        jTFMonth.setText("0");
        jTFMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFMonthActionPerformed(evt);
            }
        });

        jTFYear.setText("0000");

        jLblName.setText("Event Name");

        jLblLocation.setText("Event Location");

        jLblDate.setText("Date (D/M/Y)");

        jBtnInput.setText("Add Event");
        jBtnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnInputActionPerformed(evt);
            }
        });

        jBtnSave.setText("Save");
        jBtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSaveActionPerformed(evt);
            }
        });

        jLblEvents.setText("Events");

        jLblSort.setText("Sort By:");

        JCBoxSort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Date", "Name", "Location" }));
        JCBoxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCBoxSortActionPerformed(evt);
            }
        });

        jLstEvents.setModel(new javax.swing.DefaultListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jLstEvents);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLblLocation)
                            .addComponent(jLblDate)
                            .addComponent(jLblName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTFDay, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTFYear, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTFLocation)
                            .addComponent(jTFName))
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBtnSave)
                                    .addComponent(jBtnInput, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(21, 21, 21)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLblSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JCBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblEvents)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 9, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblTitle)
                    .addComponent(jLblEvents))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLblLocation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLblDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTFDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTFYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jBtnInput))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLblSort)
                        .addComponent(JCBoxSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtnSave))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFMonthActionPerformed

    private void jTFDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFDayActionPerformed

    private void jBtnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnInputActionPerformed
        try{
           String l = jTFLocation.getText();
           String n = jTFName.getText();
           int d = Integer.parseInt(jTFDay.getText());
           int m = Integer.parseInt(jTFMonth.getText());
           int y = Integer.parseInt(jTFYear.getText());
           
           if(l.contains("_") || n.contains("_"))
               throw new Exception("'_' is not a legal character");
           Event e = new Event(n, l, d, m, y);
           
           manager.addEvent(e);
           updateList();
        }
        catch(Exception ex){
            System.out.printf("No, you can't do that: %s\n", ex.getMessage());
        }
    }//GEN-LAST:event_jBtnInputActionPerformed

    private void jBtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSaveActionPerformed
        writeFile("C:\\Users\\Eli Gavett\\Documents\\GitHub\\CS372\\PR3_3\\list.txt");
    }//GEN-LAST:event_jBtnSaveActionPerformed

    private void JCBoxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCBoxSortActionPerformed
        String sort = (String)JCBoxSort.getSelectedItem();
        if(sort.equals("Date"))
            manager.sortByDate();
        else if(sort.equals("Name"))
            manager.sortByName();
        else
            manager.sortByLocation();
        updateList();
    }//GEN-LAST:event_JCBoxSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PR3_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PR3_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PR3_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PR3_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PR3_3().setVisible(true);
                readFile("C:\\Users\\Eli Gavett\\Documents\\GitHub\\CS372\\PR3_3\\list.txt");
                updateList();
            }
        });
    }
    
    /*
    * If the file exists, reads the file for event informations and adds them to manager
    * @param String f the location of the file
    */
    public static void readFile(String f){
        try{
            File file = new File(f);
            BufferedReader rdr = new BufferedReader(new FileReader(file));
            String line;
            int index1 = 0;
            int index2;
            while((line = rdr.readLine()) != null){
                index2 = line.indexOf("_");
                String n = line.substring(index1, index2);
                index2++;
                
                index1 = line.indexOf("_", index2 );
                String l = line.substring(index2, index1);
                index1++;
                
                index2 = line.indexOf("_", index1);
                int d = Integer.parseInt(line.substring(index1, index2));
                index2++;
                
                index1 = line.indexOf("_", index2);
                int m = Integer.parseInt(line.substring(index2, index1));
                index1++;
                
                index2 = line.indexOf("_", index1);
                int y = Integer.parseInt(line.substring(index1, index2));
                
                manager.addEvent(n,l, d, m, y);
                index1 = 0;
                index2 = 0;
            }
            rdr.close();
        }
        catch (Exception ex){
            System.out.printf("How did you manage that? %s\n", ex.getMessage());
        }
    }
    
    /*
    * Saves event infromation to disk. The data is formated in such a way that
    * readFile() can access the information later and push it to manager
    * Events are sorted by date beforehand
    */
    public static void writeFile(String f){
        manager.sortByDate();
        File file = new File(f);
        try{
            BufferedWriter wrtr = new BufferedWriter(new FileWriter(file));
            String line;
            for(int a = 0; a < manager.getSize(); ++a){
                line = manager.get(a).storageString();
                wrtr.write(line);
                wrtr.newLine();
            }
            wrtr.close();
        }
        catch (Exception ex){
            System.out.printf("How did you manage that? %s\n,", ex.getMessage());
        }
    }
    
    /*
    * Clears jLstEvents, takes sorted or unsorted eventdata,
    * and adds them to the list
    */
    public static void updateList(){
        DefaultListModel listModel = new DefaultListModel();
        for(int a = 0; a < manager.getSize(); a++){
            listModel.addElement(manager.get(a).toString());
        }
        jLstEvents.setModel(listModel);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox JCBoxSort;
    private javax.swing.JButton jBtnInput;
    private javax.swing.JButton jBtnSave;
    private javax.swing.JLabel jLblDate;
    private javax.swing.JLabel jLblEvents;
    private javax.swing.JLabel jLblLocation;
    private javax.swing.JLabel jLblName;
    private javax.swing.JLabel jLblSort;
    private javax.swing.JLabel jLblTitle;
    private static javax.swing.JList jLstEvents;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFDay;
    private javax.swing.JTextField jTFLocation;
    private javax.swing.JTextField jTFMonth;
    private javax.swing.JTextField jTFName;
    private javax.swing.JTextField jTFYear;
    // End of variables declaration//GEN-END:variables
}
